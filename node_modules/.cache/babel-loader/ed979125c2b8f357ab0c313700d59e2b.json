{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\a.pasichnyk\\\\Desktop\\\\\\u0423\\u0434\\u0430\\u043B\\u0435\\u043D\\u043A\\u0430 \\u0440\\u0430\\u0431\\u043E\\u0442\\u0430\\\\Projects\\\\goit-react-hw-01-components\\\\src\\\\components\\\\Statistics\\\\Statistics.js\";\nimport { Layout } from '../profile/profile.styled';\nimport propTypes from 'prop-types';\nimport { getRandomHexColor, Title, List, Item } from './StatisticsStyled';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Statistics = _ref => {\n  let {\n    stats,\n    title\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"statistics\",\n      children: [title && /*#__PURE__*/_jsxDEV(Title, {\n        className: \"title\",\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(List, {\n        className: \"stat-list\",\n        children: stats.map(el => /*#__PURE__*/_jsxDEV(Item, {\n          className: \"item\",\n          color: getRandomHexColor(),\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"label\",\n            children: el.label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 14,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"percentage\",\n            children: [el.percentage, \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 15,\n            columnNumber: 15\n          }, this)]\n        }, el.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n};\n_c = Statistics;\nStatistics.propTypes = {\n  stats: propTypes.arrayOf(propTypes.shape({\n    label: propTypes.string.isRequired,\n    percentage: propTypes.number.isRequired\n  }))\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"Statistics\");","map":{"version":3,"sources":["C:/Users/a.pasichnyk/Desktop/Удаленка работа/Projects/goit-react-hw-01-components/src/components/Statistics/Statistics.js"],"names":["Layout","propTypes","getRandomHexColor","Title","List","Item","Statistics","stats","title","map","el","label","percentage","id","arrayOf","shape","string","isRequired","number"],"mappings":";AAAA,SAASA,MAAT,QAAuB,2BAAvB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,SAASC,iBAAT,EAA4BC,KAA5B,EAAmCC,IAAnC,EAAyCC,IAAzC,QAAqD,oBAArD;;AAEA,OAAO,MAAMC,UAAU,GAAG,QAAsB;AAAA,MAArB;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAqB;AAC9C,sBACE,QAAC,MAAD;AAAA,2BACE;AAAS,MAAA,SAAS,EAAC,YAAnB;AAAA,iBACGA,KAAK,iBAAI,QAAC,KAAD;AAAO,QAAA,SAAS,EAAC,OAAjB;AAAA,kBAA0BA;AAA1B;AAAA;AAAA;AAAA;AAAA,cADZ,eAEE,QAAC,IAAD;AAAM,QAAA,SAAS,EAAC,WAAhB;AAAA,kBACGD,KAAK,CAACE,GAAN,CAAUC,EAAE,iBACX,QAAC,IAAD;AAAM,UAAA,SAAS,EAAC,MAAhB;AAAmC,UAAA,KAAK,EAAER,iBAAiB,EAA3D;AAAA,kCACE;AAAM,YAAA,SAAS,EAAC,OAAhB;AAAA,sBAAyBQ,EAAE,CAACC;AAA5B;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAM,YAAA,SAAS,EAAC,YAAhB;AAAA,uBAA8BD,EAAE,CAACE,UAAjC;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA,WAA4BF,EAAE,CAACG,EAA/B;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAeD,CAhBM;KAAMP,U;AAkBbA,UAAU,CAACL,SAAX,GAAuB;AACnBM,EAAAA,KAAK,EAAEN,SAAS,CAACa,OAAV,CACHb,SAAS,CAACc,KAAV,CAAgB;AACZJ,IAAAA,KAAK,EAAEV,SAAS,CAACe,MAAV,CAAiBC,UADZ;AAEZL,IAAAA,UAAU,EAAEX,SAAS,CAACiB,MAAV,CAAiBD;AAFjB,GAAhB,CADG;AADY,CAAvB","sourcesContent":["import { Layout } from '../profile/profile.styled';\r\nimport propTypes from 'prop-types';\r\n\r\nimport { getRandomHexColor, Title, List, Item } from './StatisticsStyled';\r\n\r\nexport const Statistics = ({ stats, title }) => {\r\n  return (\r\n    <Layout>\r\n      <section className=\"statistics\">\r\n        {title && <Title className=\"title\">{title}</Title>}\r\n        <List className=\"stat-list\">\r\n          {stats.map(el => (\r\n            <Item className=\"item\" key={el.id} color={getRandomHexColor()}>\r\n              <span className=\"label\">{el.label}</span>\r\n              <span className=\"percentage\">{el.percentage}%</span>\r\n            </Item>\r\n          ))}\r\n        </List>\r\n      </section>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nStatistics.propTypes = {\r\n    stats: propTypes.arrayOf(\r\n        propTypes.shape({\r\n            label: propTypes.string.isRequired,\r\n            percentage: propTypes.number.isRequired,\r\n        })\r\n    ),\r\n};"]},"metadata":{},"sourceType":"module"}